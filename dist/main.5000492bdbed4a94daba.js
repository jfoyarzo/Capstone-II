(()=>{"use strict";const t="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/DxgcbWZ6MHoTsGdusWNs/likes/",e={async getComments(t){const e=`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/DxgcbWZ6MHoTsGdusWNs/comments?item_id=${t}`,n=await fetch(e);return await n.json()},async addComment(t,e,n){const a=await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/DxgcbWZ6MHoTsGdusWNs/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:t,username:e,comment:n})});return await a.text()}},n={async movie(t){const n=document.querySelector("#staticBackdrop");n.innerHTML="";const a=`https://api.tvmaze.com/lookup/shows?thetvdb=${t}`,s=await fetch(a).then((t=>t.json()));null===s.rating.average&&(s.rating.average="Not rated");const o=document.createElement("div");o.classList.add("modal-dialog","modal-dialog-scrollable"),o.innerHTML=`\n    \x3c!-- Modal --\x3e\n        <div class="modal-content">\n          <div class="modal-header">\n            <h5 class="modal-title" id="staticBackdropLabel">Show Details</h5>\n            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n          </div>\n          <div class="modal-body">\n            <div style="background-image: url(${s.image.original})">\n              <img src="${s.image.original}" class="rounded img-fluid pb-4 show-image" alt="...">\n            </div>\n            <div class="text-center">\n            <h5 class="card-title m-3">Show name: ${s.name}</h5>\n            <h6 class="card-subtitle mb-4 text-muted">Language: ${s.language}</h6>\n            </div>\n            <a href="${s.url}" target="_blank" class="link-primary ps-4">More</a>\n            <h5 class="text-start pt-2 ps-4 text-muted">Type: ${s.type}</h5>\n            <h5 class="text-start pt-2 ps-4 text-muted">Runtime: ${s.runtime}</h5>\n            <h5 class="text-start pt-2 ps-4 text-muted">Rating: ${s.rating.average}</h5>\n            <p  class="text-start pt-2 mb-4 ps-4 text-muted ps-4>${s.genres}</p>\n            <form id="form" method="post" class='modalForm  mt-2'>\n            <h3></h3>\n            <p class="ps-2">Commented <span id="commentCount" class="badge rounded-pill bg-info text-dark"></span> times</p>\n            <div class='justify-content-center input-group-sm'>\n              <input class="form-control formInput" type="text" placeholder="Your name" name="name" id="showID" required>\n              <textarea class="form-control formInput mt-2" type="text" placeholder="Your comment" name="comment" id="commentshowID" required></textarea>\n            </div>\n            <div class="modal-footer mt-2 ma-0">\n              <input type="submit" value="Comment" class="submit btn btn-primary float-end" id="submit">\n            </div>\n            </form>\n          <div class="commentSection"></div>\n          </div>\n        </div>\n`,n.appendChild(o),document.querySelector("#submit").addEventListener("click",(n=>{n.preventDefault();const a=document.querySelector("#showID").value,s=document.querySelector("#commentshowID").value;e.addComment(t,a,s);const o=new Date,c=`${o.getFullYear()}-${o.getMonth()}-${o.getDate()}`,i=document.createElement("p");i.classList.add("ps-3"),i.innerHTML=`<span class="fs-4 text-mute">${a}</span> \n      <span class="commented-date badge rounded-pill bg-secondary  ">${c}:</span> \n      <span class="ps-2 fs-4 "> ${s}</span>`,document.querySelector(".commentSection").appendChild(i);const d=document.querySelector("#commentCount"),l=Number(d.textContent)+1;d.textContent=l}))},async getComments(t){const n=await e.getComments(t),a=document.querySelector(".commentSection"),s=document.createElement("div");if(s.innerHTML="",!n.error)for(let t=0;t<n.length;t+=1){const{username:e,comment:o}=n[t],c=n[t].creation_date;s.innerHTML+=`<p class="ps-3"><span class="fs-4 text-mute">${e}</span> \n        <span class="commented-date badge rounded-pill bg-secondary  ">${c}:</span> \n        <span class="ps-2 fs-4 "> ${o}</span></p>`,a.appendChild(s)}const o=document.querySelector("#commentCount"),c=n.length||0;o.textContent=c}},a=n;(async()=>{const e=await(async t=>await fetch("https://api.tvmaze.com/search/shows?q=c").then((t=>t.json())))(),n=await(async()=>await fetch(`${t}`).then((t=>t.json())))(),a=new DocumentFragment,s=document.querySelector(".cards-container"),o=new DOMParser,c=document.querySelector("#shows");e.forEach(((t,e)=>{const{show:s}=t,c=n.find((t=>t.item_id===s.id));let i=0;c&&(i=c.likes);const d=`<div class="col-12 col-md-4 card-data">\n    <div class="card mb-3">\n    <img src="${s.image.original}" class="card-img-top" alt="${s.name} image">\n    <div class="card-body d-flex flex-column">\n      <div class="d-flex justify-content-between">\n          <h5 class="card-title">${s.name}</h5>\n          <div class="btn-wrapper d-flex">     \n        <div class="like-wrapper text-center me-3" data-id="${s.id}" role="button">          \n          <i class="fa-regular fa-heart fa-xl like"></i>\n          <p>${i}</p>\n        </div>      \n        <div class="comments-wrapper text-center" data-index="${e}" role="button">\n          <button id =${s.externals.thetvdb} type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">\n              Details\n          </button>\n        </div>      \n        </div>      \n      </div>\n    </div>\n    </div>\n  </div>`,l=o.parseFromString(d,"text/html").body.firstChild;a.appendChild(l)})),s.appendChild(a);const i=(t=>{const e=document.querySelectorAll(`.${t}`);let n=0;return e.forEach((()=>{n+=1})),n})("card");c.innerText=`Shows(${i})`})().then((()=>{document.querySelectorAll(".like-wrapper").forEach((e=>{const{id:n}=e.dataset;e.addEventListener("click",(()=>{(async(e,n)=>{let a=parseInt(n.lastElementChild.textContent,10);const s=n.firstElementChild,o=await(async e=>await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:e})}))(parseInt(e,10));o&&(a+=1,n.lastElementChild.innerText=a,s.classList.add("fa-solid"))})(n,e)}),{once:!0})})),document.querySelector(".cards-container").addEventListener("click",(t=>{"Details"===t.target.textContent.trim()&&(a.movie(t.target.id),a.getComments(t.target.id))}))}))})();